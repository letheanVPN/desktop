// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * Service provides internationalization and localization.
 * It is the concrete implementation for the i18n service.
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as i18n$0 from "../../../../../nicksnyder/go-i18n/v2/i18n/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as language$0 from "../../../../../../golang.org/x/text/language/models.js";

/**
 * AvailableLanguages returns the list of available languages.
 */
export function AvailableLanguages(): $CancellablePromise<language$0.Tag[]> {
    return $Call.ByID(1795050163).then(($result: any) => {
        return $$createType0($result);
    });
}

/**
 * Bundle returns the underlying i18n.Bundle.
 */
export function Bundle(): $CancellablePromise<i18n$0.Bundle | null> {
    return $Call.ByID(3872115765).then(($result: any) => {
        return $$createType2($result);
    });
}

/**
 * GetAllMessages returns all messages for a given language as a map.
 * This is intended for frontend pre-loading to enable synchronous lookups.
 */
export function GetAllMessages(lang: string): $CancellablePromise<{ [_: string]: string }> {
    return $Call.ByID(3739048462, lang).then(($result: any) => {
        return $$createType3($result);
    });
}

/**
 * SetLanguage changes the active language for translations.
 */
export function SetLanguage(lang: string): $CancellablePromise<void> {
    return $Call.ByID(1354488549, lang);
}

/**
 * Translate a message by its ID using the configured language.
 */
export function Translate(messageID: string): $CancellablePromise<string> {
    return $Call.ByID(1347054469, messageID);
}

/**
 * TranslateWithConfig translates a message using a LocalizeConfig.
 */
export function TranslateWithConfig(lc: i18n$0.LocalizeConfig | null): $CancellablePromise<string> {
    return $Call.ByID(1844970395, lc);
}

// Private type creation functions
const $$createType0 = $Create.Array($Create.Any);
const $$createType1 = i18n$0.Bundle.createFrom;
const $$createType2 = $Create.Nullable($$createType1);
const $$createType3 = $Create.Map($Create.Any, $Create.Any);
