// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

/**
 * Var is a variable that can be set, unset and queried for its state.
 * @template T
 */
export class Var {
    /**
     * Creates a new Var instance.
     * @param {Partial<Var<T>>} [$$source = {}] - The source object to create the Var.
     */
    constructor($$source = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Given creation functions for each type parameter,
     * returns a creation function for a concrete instance
     * of the generic class Var.
     * @template [T=any]
     * @param {(source: any) => T} $$createParamT
     * @returns {($$source?: any) => Var<T>}
     */
    static createFrom($$createParamT) {
        return ($$source = {}) => {
            let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
            return new Var(/** @type {Partial<Var<T>>} */($$parsedSource));
        };
    }
}

/**
 * Bool is a `bool` that can be unset
 */
export const Bool = Var;

/**
 * Bool is a `bool` that can be unset
 * @typedef {Var<boolean>} Bool
 */
